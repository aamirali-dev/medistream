# Use a minimal and secure base image for Python
FROM python:3.8-slim

# Set environment variables for Python
ENV PYTHONUNBUFFERED 1
ENV PIP_NO_CACHE_DIR off

# Create and set the working directory in the container
WORKDIR /app

# Install system-level dependencies (if needed)
# Example: Install PostgreSQL client library
# RUN apt-get update && apt-get install -y libpq-dev

# Copy the Pipfile and Pipfile.lock to the container
COPY Pipfile Pipfile.lock /app/

# Install pipenv
RUN pip install pipenv

# Install project dependencies using pipenv
RUN pipenv install --deploy --ignore-pipfile

# Copy your Django project source code to the container
COPY . /app/

# Collect static files (if applicable)
RUN pipenv run python manage.py collectstatic --noinput

# Define the command to run the Django application using pipenv
CMD ["pipenv", "run", "gunicorn", "your_project.wsgi:application", "--bind", "0.0.0.0:8000"]
